/* Programme syntaxiquement correct */
/* Programme contextuellement correct */
NOEUD_PROGRAMME
. <Liste (longueur 1) :>
. . # NOEUD_CLASSE                                         -- Ligne 13
. . . . NOEUD_IDENT Rec                                    -- Ligne 13
. . . . . -- Defn : (classe, type_classe(Rec))
. . . . NOEUD_VIDE
. . . . <Liste (longueur 1) :>
. . . . . # NOEUD_METHODE                                  -- Ligne 14
. . . . . . . NOEUD_IDENT int                              -- Ligne 14
. . . . . . . . -- Defn : (type, int)
. . . . . . . . -- Type : int
. . . . . . . NOEUD_IDENT ackermann                        -- Ligne 14
. . . . . . . . -- Defn : (methode([int,
                                    int]), int)
. . . . . . . <Liste (longueur 2) :>
. . . . . . . . # NOEUD_PARAMETRE                          -- Ligne 14
. . . . . . . . . . NOEUD_IDENT int                        -- Ligne 14
. . . . . . . . . . . -- Defn : (type, int)
. . . . . . . . . . . -- Type : int
. . . . . . . . . . NOEUD_IDENT m                          -- Ligne 14
. . . . . . . . . . . -- Defn : (param, int)
. . . . . . . . # NOEUD_PARAMETRE                          -- Ligne 14
. . . . . . . . . . NOEUD_IDENT int                        -- Ligne 14
. . . . . . . . . . . -- Defn : (type, int)
. . . . . . . . . . . -- Type : int
. . . . . . . . . . NOEUD_IDENT n                          -- Ligne 14
. . . . . . . . . . . -- Defn : (param, int)
. . . . . . . <Liste vide>
. . . . . . . <Liste (longueur 1) :>
. . . . . . . . # NOEUD_SI                                 -- Ligne 15
. . . . . . . . . . <Liste (longueur 1) :>
. . . . . . . . . . . # NOEUD_COND                         -- Ligne 15
. . . . . . . . . . . . . NOEUD_EGAL_EGAL                  -- Ligne 15
. . . . . . . . . . . . . . -- Type : boolean
. . . . . . . . . . . . . . NOEUD_IDENT m                  -- Ligne 15
. . . . . . . . . . . . . . . -- Defn : (param, int)
. . . . . . . . . . . . . . . -- Type : int
. . . . . . . . . . . . . . NOEUD_ENTIER  0                -- Ligne 15
. . . . . . . . . . . . . . . -- Type : int
. . . . . . . . . . . . . <Liste (longueur 1) :>
. . . . . . . . . . . . . . # NOEUD_RETOUR                 -- Ligne 16
. . . . . . . . . . . . . . . . -- Type : int
. . . . . . . . . . . . . . . . NOEUD_PLUS                 -- Ligne 16
. . . . . . . . . . . . . . . . . -- Type : int
. . . . . . . . . . . . . . . . . NOEUD_IDENT n            -- Ligne 16
. . . . . . . . . . . . . . . . . . -- Defn : (param, int)
. . . . . . . . . . . . . . . . . . -- Type : int
. . . . . . . . . . . . . . . . . NOEUD_ENTIER  1          -- Ligne 16
. . . . . . . . . . . . . . . . . . -- Type : int
. . . . . . . . . . <Liste (longueur 1) :>
. . . . . . . . . . . # NOEUD_SI                           -- Ligne 19
. . . . . . . . . . . . . <Liste (longueur 1) :>
. . . . . . . . . . . . . . # NOEUD_COND                   -- Ligne 19
. . . . . . . . . . . . . . . . NOEUD_EGAL_EGAL            -- Ligne 19
. . . . . . . . . . . . . . . . . -- Type : boolean
. . . . . . . . . . . . . . . . . NOEUD_IDENT n            -- Ligne 19
. . . . . . . . . . . . . . . . . . -- Defn : (param, int)
. . . . . . . . . . . . . . . . . . -- Type : int
. . . . . . . . . . . . . . . . . NOEUD_ENTIER  0          -- Ligne 19
. . . . . . . . . . . . . . . . . . -- Type : int
. . . . . . . . . . . . . . . . <Liste (longueur 1) :>
. . . . . . . . . . . . . . . . . # NOEUD_RETOUR           -- Ligne 20
. . . . . . . . . . . . . . . . . . . -- Type : int
. . . . . . . . . . . . . . . . . . . NOEUD_APPEL          -- Ligne 20
. . . . . . . . . . . . . . . . . . . . -- Type : int
. . . . . . . . . . . . . . . . . . . . NOEUD_IDENT ackermann-- Ligne 20
. . . . . . . . . . . . . . . . . . . . . -- Defn : (methode([int,
                                                              int]), int)
. . . . . . . . . . . . . . . . . . . . . -- Type : int
. . . . . . . . . . . . . . . . . . . . <Liste (longueur 2) :>
. . . . . . . . . . . . . . . . . . . . . # NOEUD_MOINS    -- Ligne 20
. . . . . . . . . . . . . . . . . . . . . . . -- Type : int
. . . . . . . . . . . . . . . . . . . . . . . NOEUD_IDENT m-- Ligne 20
. . . . . . . . . . . . . . . . . . . . . . . . -- Defn : (param, int)
. . . . . . . . . . . . . . . . . . . . . . . . -- Type : int
. . . . . . . . . . . . . . . . . . . . . . . NOEUD_ENTIER  1-- Ligne 20
. . . . . . . . . . . . . . . . . . . . . . . . -- Type : int
. . . . . . . . . . . . . . . . . . . . . # NOEUD_ENTIER  1-- Ligne 20
. . . . . . . . . . . . . . . . . . . . . . . -- Type : int
. . . . . . . . . . . . . <Liste (longueur 1) :>
. . . . . . . . . . . . . . # NOEUD_RETOUR                 -- Ligne 23
. . . . . . . . . . . . . . . . -- Type : int
. . . . . . . . . . . . . . . . NOEUD_APPEL                -- Ligne 23
. . . . . . . . . . . . . . . . . -- Type : int
. . . . . . . . . . . . . . . . . NOEUD_IDENT ackermann    -- Ligne 23
. . . . . . . . . . . . . . . . . . -- Defn : (methode([int,
                                                        int]), int)
. . . . . . . . . . . . . . . . . . -- Type : int
. . . . . . . . . . . . . . . . . <Liste (longueur 2) :>
. . . . . . . . . . . . . . . . . . # NOEUD_MOINS          -- Ligne 23
. . . . . . . . . . . . . . . . . . . . -- Type : int
. . . . . . . . . . . . . . . . . . . . NOEUD_IDENT m      -- Ligne 23
. . . . . . . . . . . . . . . . . . . . . -- Defn : (param, int)
. . . . . . . . . . . . . . . . . . . . . -- Type : int
. . . . . . . . . . . . . . . . . . . . NOEUD_ENTIER  1    -- Ligne 23
. . . . . . . . . . . . . . . . . . . . . -- Type : int
. . . . . . . . . . . . . . . . . . # NOEUD_APPEL          -- Ligne 23
. . . . . . . . . . . . . . . . . . . . -- Type : int
. . . . . . . . . . . . . . . . . . . . NOEUD_IDENT ackermann-- Ligne 23
. . . . . . . . . . . . . . . . . . . . . -- Defn : (methode([int,
                                                              int]), int)
. . . . . . . . . . . . . . . . . . . . . -- Type : int
. . . . . . . . . . . . . . . . . . . . <Liste (longueur 2) :>
. . . . . . . . . . . . . . . . . . . . . # NOEUD_IDENT m  -- Ligne 23
. . . . . . . . . . . . . . . . . . . . . . . -- Defn : (param, int)
. . . . . . . . . . . . . . . . . . . . . . . -- Type : int
. . . . . . . . . . . . . . . . . . . . . # NOEUD_MOINS    -- Ligne 23
. . . . . . . . . . . . . . . . . . . . . . . -- Type : int
. . . . . . . . . . . . . . . . . . . . . . . NOEUD_IDENT n-- Ligne 23
. . . . . . . . . . . . . . . . . . . . . . . . -- Defn : (param, int)
. . . . . . . . . . . . . . . . . . . . . . . . -- Type : int
. . . . . . . . . . . . . . . . . . . . . . . NOEUD_ENTIER  1-- Ligne 23
. . . . . . . . . . . . . . . . . . . . . . . . -- Type : int
. NOEUD_PRINCIPAL
. . <Liste (longueur 1) :>
. . . # NOEUD_DECL_VARIABLE                                -- Ligne 29
. . . . . NOEUD_IDENT Rec                                  -- Ligne 29
. . . . . . -- Defn : (classe, type_classe(Rec))
. . . . . . -- Type : type_classe(Rec)
. . . . . <Liste (longueur 1) :>
. . . . . . # NOEUD_DECL_VAR                               -- Ligne 29
. . . . . . . . NOEUD_IDENT calcule                        -- Ligne 29
. . . . . . . . . -- Defn : (var, type_classe(Rec))
. . . . . . . . NOEUD_CREATION                             -- Ligne 29
. . . . . . . . . -- Type : type_classe(Rec)
. . . . . . . . . NOEUD_IDENT Rec                          -- Ligne 29
. . . . . . . . . . -- Defn : (classe, type_classe(Rec))
. . . . . . . . . . -- Type : type_classe(Rec)
. . <Liste (longueur 1) :>
. . . # NOEUD_ECRITURE_LIGNE                               -- Ligne 31
. . . . . <Liste (longueur 2) :>
. . . . . . # NOEUD_CHAINE "Ackermann(3,1) = "             -- Ligne 31
. . . . . . . . -- Type : String
. . . . . . # NOEUD_APPEL                                  -- Ligne 31
. . . . . . . . -- Type : int
. . . . . . . . NOEUD_SELECTION                            -- Ligne 31
. . . . . . . . . NOEUD_IDENT calcule                      -- Ligne 31
. . . . . . . . . . -- Defn : (var, type_classe(Rec))
. . . . . . . . . . -- Type : type_classe(Rec)
. . . . . . . . . NOEUD_IDENT ackermann                    -- Ligne 31
. . . . . . . . . . -- Defn : (methode([int,
                                        int]), int)
. . . . . . . . . . -- Type : int
. . . . . . . . <Liste (longueur 2) :>
. . . . . . . . . # NOEUD_ENTIER  3                        -- Ligne 31
. . . . . . . . . . . -- Type : int
. . . . . . . . . # NOEUD_ENTIER  1                        -- Ligne 31
. . . . . . . . . . . -- Type : int
